package com.jnwat.swmobilegy.workevent;

import java.util.ArrayList;
import java.util.List;

import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.jnwat.bean.BIntentObj;
import com.jnwat.bean.BMeetingApplyLeade;
import com.jnwat.swmobilegy.BaseActivity;
import com.jnwat.swmobilegy.R;
import com.jnwat.swmobilegy.dapter.AdapterAuditingDept;
import com.jnwat.swmobilegy.dapter.AdapterAuditingName;
import com.jnwat.swmobilegy.dapter.AdapterSendProcess.ViewHolder;
import com.jnwat.tools.ModifySysTitle;

/**
 * @author chang-zhiyuan 审核页面
 */
public class TaskAuditingActivity extends BaseActivity {
	private ListView lv_auditing_name, lv_auditing_dept;
	AdapterAuditingName adapterAuditingName;
	// 赋值
	// BIntentObj.list_getnode
	private List<BMeetingApplyLeade> mmlist_getnode_child;
	AdapterGridAuditing mAdapterGridAuditing;
	/**
	 * 选中的临时数据
	 */
	private List<BMeetingApplyLeade> temp_name;
	private GridView gd_taskaudting;

	@Override
	protected void initView() {
		// TODO Auto-generated method stub
		AdapterAuditingDept adapterAuditingDept = new AdapterAuditingDept(
				TaskAuditingActivity.this, false);
		lv_auditing_dept.setAdapter(adapterAuditingDept);
		mmHandler.sendEmptyMessage(10);

	}

	@Override
	protected void setListener() {
		// TODO Auto-generated method stub
		lv_auditing_dept.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> adapterview, View view,
					int i, long l) {
				// TODO Auto-generated method stub
				BIntentObj.index = i;
				if (null != temp_name) {
					temp_name.clear();
				}
				mmHandler.sendEmptyMessage(10);
			}
		});

		lv_auditing_name.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> adapterview, View view,
					int i, long l) {
				// TODO Auto-generated method stub
				// 设置点击事件
				getSel(BIntentObj.index, i, BIntentObj.ismul);
				adapterAuditingName.notifyDataSetChanged();
				if (null == mAdapterGridAuditing) {
					mAdapterGridAuditing = new AdapterGridAuditing();
					gd_taskaudting.setAdapter(mAdapterGridAuditing);
				}

				mAdapterGridAuditing.notifyDataSetChanged();
			}
		});

	}

	/**
	 * 选择
	 * 
	 * @param mountSel
	 *            是否多选
	 */
	private void getSel(int parent, int click, boolean mountSel) {
		System.out.println("parent.." + parent + "click.." + click);
		String str = BIntentObj.list_getnode.get(parent).getNodeid();
		int length = BIntentObj.list_getnode_child.get(str).size();

		for (int i = 0; i < length; i++) {
			if (i == click) {
				if (BIntentObj.list_getnode_child.get(str).get(i).getIdididi()
						.equals("")) {
					BIntentObj.list_getnode_child.get(str).get(i)
							.setIdididi("click");
				} else {
					BIntentObj.list_getnode_child.get(str).get(i)
							.setIdididi("");
				}
			} else {
				if (!mountSel) {// true 多选
					// BIntentObj.list_getnode_child.get(parent).get(i).setIdididi("");
				} else {
					BIntentObj.list_getnode_child.get(str).get(i)
							.setIdididi("");
				}
			}

			if (!BIntentObj.list_getnode_child.get(str).get(i).getIdididi()
					.equals("")&&!temp_name.contains(BIntentObj.list_getnode_child.get(str).get(i))) {
				temp_name.add(BIntentObj.list_getnode_child.get(str).get(i));
			}

		}

	}

	@Override
	protected void initData() {
		// TODO Auto-generated method stub
		lv_auditing_dept.setSelection(0);
		lv_auditing_dept.setSelector(R.color.white);

	}

	@Override
	protected void setView() {
		// TODO Auto-generated method stub
		setContentView(R.layout.activity_taskauditing);
		ModifySysTitle.ModifySysTitleStyle(R.color.black_dark,
				TaskAuditingActivity.this);
		setBackListener("提交审核信息", false);
		lv_auditing_name = (ListView) findViewById(R.id.lv_auditing_name);

		lv_auditing_dept = (ListView) findViewById(R.id.lv_auditing_dept);
		gd_taskaudting = (GridView) findViewById(R.id.gd_taskaudting);
		mmlist_getnode_child = new ArrayList<BMeetingApplyLeade>();
		temp_name = new ArrayList<BMeetingApplyLeade>();
	}

	Handler mmHandler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case 10:
				mmlist_getnode_child = BIntentObj.list_getnode_child
						.get(BIntentObj.list_getnode.get(BIntentObj.index)
								.getNodeid());
				adapterAuditingName = new AdapterAuditingName(
						TaskAuditingActivity.this, true, BIntentObj.index,
						mmlist_getnode_child);
				lv_auditing_name.setAdapter(adapterAuditingName);

				break;

			case 100:
				mmlist_getnode_child = BIntentObj.list_getnode_child
						.get(BIntentObj.list_getnode.get(BIntentObj.index)
								.getNodeid());
				adapterAuditingName.notifyDataSetChanged();
				break;

			}
			super.handleMessage(msg);
		}
	};

	public class AdapterGridAuditing extends BaseAdapter {

		LayoutInflater mInflater;

		public AdapterGridAuditing() {
			mInflater = LayoutInflater.from(TaskAuditingActivity.this);

		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return temp_name.size();
		}

		@Override
		public Object getItem(int i) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public long getItemId(int i) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolderz viewHolder = null;
			if (convertView == null) {
				convertView = mInflater.inflate(R.layout.item_grid_name, null,
						false);
				viewHolder = new ViewHolderz();
				viewHolder.textView_gridview_name = (TextView) convertView
						.findViewById(R.id.textView_gridview_name);
				convertView.setTag(viewHolder);
			} else {
				viewHolder = (ViewHolderz) convertView.getTag();
			}
			viewHolder.textView_gridview_name.setText(temp_name.get(position)
					.getRecname());
			return convertView;
		}

		/**
		 * ViewHolder
		 * 
		 * @author mrsimple
		 */
		class ViewHolderz {
			TextView textView_gridview_name;
		}

	}

}
