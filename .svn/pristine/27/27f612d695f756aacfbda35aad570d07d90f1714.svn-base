package com.jnwat.oamobilegy.workevent;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.inputmethod.InputMethodManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.jnwat.bean.BIntentObj;
import com.jnwat.bean.BUserTasks;
import com.jnwat.dialog.TitlePopup;
import com.jnwat.dialog.TitlePopup.OnItemOnClickListener;
import com.jnwat.oamobilegy.MessageActivity;
import com.jnwat.oamobilegy.R;
import com.jnwat.oamobilegy.view.ActionItem;
import com.jnwat.oamobilegy.view.PagerSlidingTabStrip;
import com.jnwat.tools.ToastViewTools;
import com.jnwat.view.WorkEventPopupWindow;
import com.lidroid.xutils.util.LogUtils;

/**
 * @author chang-zhiyuan 发起流程
 */
public class WorkeventFragment extends Fragment {
	private View view;
	ViewPager viewPager;
	PagerSlidingTabStrip tabs;
	ImageView iv_menu;
	public static ImageView iv_message;
	LinearLayout lin_menu, LayoutPopup;
	private TitlePopup titlePopup;
	Animation animation;
	TextView tv_sercher;
	private static WorkeventFragment workeventfragment = null;
	WorkEventPopupWindow mPopup;
	Activity mContext;
	private List<BUserTasks> showList = new ArrayList<BUserTasks>();
	public String curFragmentTag = "";
	/**
	 * Tab标题
	 */
	private static final String[] TITLE = new String[] { "待办流程", "发起流程", "已办流程" };

	public static WorkeventFragment newInstance(String s) {
		if (null == workeventfragment) {
			workeventfragment = new WorkeventFragment();
		}
		Bundle bundle = new Bundle();
		// newFragment.setArguments(bundle);
		return workeventfragment;

	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		if (view == null) {
			view = inflater.inflate(R.layout.fragment_workevent, null);
			mContext = this.getActivity();
		}
		// ViewPager的adapter
		viewPager = (ViewPager) view.findViewById(R.id.viewPager);
		//
		// 消息的button
		iv_message = (ImageView) view.findViewById(R.id.iv_message);
		viewPager.setAdapter(new myPagerAdapter(getChildFragmentManager()));
		tabs = (PagerSlidingTabStrip) view.findViewById(R.id.tabs);
		tv_sercher = (TextView) view.findViewById(R.id.tv_sercher);
		tabs.setViewPager(viewPager);

		LayoutPopup = (LinearLayout) view.findViewById(R.id.layout_popup);

		lin_menu = (LinearLayout) view.findViewById(R.id.lin_menu);
		lin_menu.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View view) {
				// TODO Auto-generated method stub
				titlePopup.show(view);
			}
		});
		iv_menu = (ImageView) view.findViewById(R.id.iv_workevent_menu);
		iv_message.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent = new Intent();
				intent.setClass(mContext, MessageActivity.class);
				BIntentObj.IsGetNewPushMessage = false;
				setMessageStage();
				startActivity(intent);
			}

		});
		// 设置消息图标
		setMessageStage();
		iv_menu.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View view) {
				// TODO Auto-generated method stub
				iv_menu.startAnimation(animation);
				ToastViewTools.initToast(mContext, "此功能正在研发中，敬请期待");
			}
		});
		tv_sercher.setOnClickListener(new OnClickListener() {// 跳转到搜索页面
					@Override
					public void onClick(View arg0) {
						// TODO Auto-generated method stub

						/*
						 * Intent intent = new Intent();
						 * intent.setClass(getActivity(), SerchActivity.class);
						 * startActivity(intent);
						 */

						mPopup = new WorkEventPopupWindow(mContext, showList);
						mPopup.showAtLocation(LayoutPopup, Gravity.TOP, 0, 50);

						/*
						 * Intent intent = new Intent();
						 * intent.setClass(getActivity(), SerchActivity.class);
						 * startActivity(intent);
						 */

						mPopup = new WorkEventPopupWindow(mContext, showList);
						mPopup.showAtLocation(LayoutPopup, Gravity.TOP, 0, 100);

						InputMethodManager imm = (InputMethodManager) mContext
								.getSystemService(mContext.INPUT_METHOD_SERVICE);
						imm.toggleSoftInput(0,
								InputMethodManager.HIDE_NOT_ALWAYS);

					}
				});
		ViewGroup parent = (ViewGroup) view.getParent();
		if (parent != null) {
			parent.removeView(view);
		}
		return view;

	}

	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if (null != iv_message) {
			// 设置消息图标
			setMessageStage();

		}

	}

	class myPagerAdapter extends FragmentPagerAdapter {
		DoProcessFragment fragment1;
		SendProcessFragment fragment2;
		OverFragment fragment3;

		public myPagerAdapter(FragmentManager fm) {
			super(fm);
		}

		@Override
		public Fragment getItem(int position) {
			switch (position) {
			case 0:
				if (null == fragment1) {
					fragment1 = new DoProcessFragment();
				}

				return fragment1;
			case 1:
				if (null == fragment2) {
					fragment2 = new SendProcessFragment();
				}
				return fragment2;
			case 2:
				if (null == fragment3) {
					fragment3 = new OverFragment();
				}

				return fragment3;
			default:
				return null;
			}

		}

		@Override
		public int getCount() {

			return TITLE.length;
		}

		@Override
		public CharSequence getPageTitle(int position) {
			return TITLE[position];
		}

	}

	private void initPopWindow() {
		// 实例化标题栏弹窗
		titlePopup = new TitlePopup(getActivity(), LayoutParams.WRAP_CONTENT,
				LayoutParams.WRAP_CONTENT);
		titlePopup.setItemOnClickListener(onitemClick);
		// 给标题栏弹窗添加子类
		titlePopup
				.addAction(new ActionItem(getActivity(),
						R.string.action_settings,
						R.drawable.menu_button_workevent_add));
		titlePopup
				.addAction(new ActionItem(getActivity(),
						R.string.action_settings,
						R.drawable.menu_button_workevent_add));
		titlePopup
				.addAction(new ActionItem(getActivity(),
						R.string.action_settings,
						R.drawable.menu_button_workevent_add));
		titlePopup
				.addAction(new ActionItem(getActivity(),
						R.string.action_settings,
						R.drawable.menu_button_workevent_add));
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		initPopWindow();
		animation = AnimationUtils.loadAnimation(getActivity(),
				R.anim.menu_zoom_exit);
	}

	private OnItemOnClickListener onitemClick = new OnItemOnClickListener() {

		@Override
		public void onItemClick(ActionItem item, int position) {
			// mLoadingDialog.show();
			switch (position) {
			case 0:// 发起群聊
				break;
			case 1:// 添加朋友
				break;
			case 2:// 扫一扫
				break;
			case 3:// 收钱
				break;
			default:
				break;
			}
		}
	};

	/**
	 * 设置图片的状态
	 */
	public void setMessageStage() {
		if (BIntentObj.IsGetNewPushMessage) {
			LogUtils.d("BIntentObj.IsGetNewPushMessage:"
					+ BIntentObj.IsGetNewPushMessage);
			iv_message.setImageResource(R.drawable.nav_button_message_new);
		} else {
			iv_message.setImageResource(R.drawable.nav_button_message);
			LogUtils.d("设置无消息");
		}

	}

}
