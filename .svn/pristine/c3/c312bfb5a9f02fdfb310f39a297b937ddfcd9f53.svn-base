package com.jnwat.personDetail;




import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.json.JSONException;
import org.json.JSONObject;



import com.google.gson.Gson;
import com.jnwat.analysis.AGETPERSONALDETAIL;
import com.jnwat.analysis.AGetUserInfo;
import com.jnwat.bean.BIntentObj;
import com.jnwat.bean.BTeacherMessgaeBean;
import com.jnwat.bean.BUserlogin;

import com.jnwat.bean.UserInfo;
import com.jnwat.config.AppConfig;
import com.jnwat.oamobilegy.LoginActivity;
import com.jnwat.oamobilegy.R;
import com.jnwat.tools.ModifySysTitle;
import com.jnwat.tools.SharedPrefsUtil;
import com.jnwat.tools.ToastViewTools;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.lidroid.xutils.util.LogUtils;
import com.xycoding.www.ClipPictureActivity;
import com.xycoding.www.ImageUtils;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;

/**
 * @author wangzh
 *
 */
public class PersonalInfoActivity extends Activity{
    private ImageView iv_edt,iv_image; 
    private EditText edt_tel,edt_off_tel,edt_qq,edt_weixin,edt_graduInst,edt_name,edt_position,edt_department,edt_birthday; // 手机号   办公电话   qq  微信    毕业学校  
    private TextView tv_head_edt;
    private ScrollView scroll;
    private final int TAKEPHOTO = 1;
    private final int PICTURES  = 2;
    private Bitmap headBitmap;
    ChooseDialog dialog;
    private final String FILENAME = "head.jpg"; //ͼƬ��
    private final String FILENAME_TEMP = "head_temp.jpg";//临时
    private String EXTERNAL ;
    private String headPath;
    private String headPath_temp;//临时
    private Button btn_complete;
    private HttpUtils http;
  
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_personal_detail);
		ModifySysTitle.ModifySysTitleStyle(R.color.title_blue,
				PersonalInfoActivity.this);
		initView();
		initListen();
		getWebData();
	}
	public void create(Bitmap bitmap){
		EXTERNAL = this.getFilesDir().getAbsolutePath();
		headPath_temp =EXTERNAL+"/"+FILENAME_TEMP;
		headPath = EXTERNAL+"/"+FILENAME;
		File file = new File(headPath);
		File file_temp = new File(headPath_temp);
		if(file_temp.exists()){
			file_temp.delete();
		}
		try {
			FileOutputStream fos = new FileOutputStream(file_temp);
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);
			fos.write(baos.toByteArray());
			fos.flush();
			fos.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void setHead(){
		EXTERNAL = this.getFilesDir().getAbsolutePath();
		headPath_temp =EXTERNAL+"/"+FILENAME_TEMP;
		headPath =EXTERNAL+"/"+FILENAME;
		File file_temp = new File(headPath_temp);
		File file = new File(headPath);
		if(file_temp.exists()){
			Bitmap bmp =BitmapFactory.decodeFile(file_temp.getPath());
			if(iv_image!=null){
				iv_image.setImageBitmap(bmp);
			}
		}else if(file.exists()){
			Bitmap bmp =BitmapFactory.decodeFile(file.getPath());
			if(iv_image!=null){
				iv_image.setImageBitmap(bmp);
			}
		}
	}
    public void initView(){
    //	edt_name,edt_position,edt_department,edt_birthday
    	edt_name = (EditText) findViewById(R.id.edt_name);
    	edt_position = (EditText) findViewById(R.id.edt_position);
    	edt_department = (EditText) findViewById(R.id.edt_department);
    	edt_birthday = (EditText) findViewById(R.id.edt_birthday);
    	iv_edt = (ImageView) findViewById(R.id.reback_imb_edt);
    	edt_off_tel =(EditText)findViewById(R.id.edt_offphone);
    	edt_tel = (EditText) findViewById(R.id.edt_mobphone);
    	edt_qq  =  (EditText) findViewById(R.id.edt_qq);
    	edt_weixin  = (EditText) findViewById(R.id.edt_weixin);
    	edt_graduInst = (EditText) findViewById(R.id.edt_graduInst);
    	iv_image  = (ImageView) findViewById(R.id.head_img);
    	tv_head_edt = (TextView) findViewById(R.id.tv_head_edt);
    	btn_complete  = (Button) findViewById(R.id.btn_complete);
    	setHead();
    	
    }
    //将获取到的数据 填充到控件
    public void  addData(BTeacherMessgaeBean teacherInfo){
    	if(teacherInfo==null){
    		teacherInfo = new BTeacherMessgaeBean();
    	}
    	edt_name.setText(teacherInfo.getName());
    	edt_position.setText(teacherInfo.getPosition());
    	edt_department.setText(teacherInfo.getDepartment());
    	edt_birthday.setText(teacherInfo.getBirthday());
    	edt_off_tel.setText(teacherInfo.getOfficephone());
    	edt_tel.setText(teacherInfo.getMobilephone());
    	edt_qq.setText(teacherInfo.getQq());
    	edt_weixin.setText(teacherInfo.getWechat());
    	edt_graduInst.setText(teacherInfo.getSchool());
    }
    //获取个人资料数据
    public void getWebData(){
    	String teacherId = "1068619b-99ba-4376-a";
    	http = new HttpUtils();
    	RequestParams params = new RequestParams(); // 参数
		params.addBodyParameter("userid",teacherId.trim());
		
		http.send(HttpRequest.HttpMethod.POST,AppConfig.getIp(PersonalInfoActivity.this)+AppConfig.METHOD_GETPERSONALDETAIL,params,
				new RequestCallBack<String>() {
					@Override
					public void onLoading(long total, long current,
							boolean isUploading) {

					}

					@Override
					public void onSuccess(
							ResponseInfo<String> responseInfo) {
						LogUtils.d("responseInfo.result:"
								+ responseInfo.result);
						AGETPERSONALDETAIL a= new AGETPERSONALDETAIL();
						
						BTeacherMessgaeBean teacherMessageBean  =a.analysisPersonalDetail(responseInfo.result);
						
						addData(teacherMessageBean);
						
					}

					@Override
					public void onStart() {
					} 

					@Override
					public void onFailure(HttpException error,
							String msg) {
						System.out.println(">>>>>><<<<<<<< failed");
					    
					}
				});

		
    }
    // 修改个人档案数据  
    public void  updatePersonalDetail(){
    	if(http==null){
    		http = new HttpUtils();
    	}
    	
    	String teacherId = "1068619b-99ba-4376-a";
    	RequestParams params = new RequestParams(); // 参数
		params.addBodyParameter("userid",teacherId.trim());
		params.addBodyParameter("mobilephone",edt_tel.getText().toString().trim());
		params.addBodyParameter("officephone",edt_off_tel.getText().toString().trim());
		params.addBodyParameter("qq",edt_qq.getText().toString().trim());
		params.addBodyParameter("wechat",edt_weixin.getText().toString().trim());
		params.addBodyParameter("school",edt_graduInst.getText().toString().trim());
		http.send(HttpRequest.HttpMethod.POST,AppConfig.getIp(PersonalInfoActivity.this)+AppConfig.METHOD_UPDAPERSONALDETAIL, params,
				new RequestCallBack<String>() {
					@Override
					public void onLoading(long total, long current,
							boolean isUploading) {

					}

					@Override
					public void onSuccess(
							ResponseInfo<String> responseInfo) {
						LogUtils.d("responseInfo.result:"
								+ responseInfo.result);
						try {
							JSONObject jsonObject = new JSONObject(responseInfo.result);
							String  Status = jsonObject.getString("Status");
							if("200".equals(Status)){
								ToastViewTools.initToast(PersonalInfoActivity.this,"更新成功");
							}else if("1000".equals(Status)){
								ToastViewTools.initToast(PersonalInfoActivity.this,"更新失败");
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					
						
					}

					@Override
					public void onStart() {
					}

					@Override
					public void onFailure(HttpException error,
							String msg) {
						System.out.println(">>>>>><<<<<<<< failed");
					 
					}
				});

    }
    public void initListen(){
    	iv_edt.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				iv_edt.setEnabled(true);
				edt_tel.setEnabled(true);
				edt_off_tel.setEnabled(true);
				edt_qq.setEnabled(true);
				edt_weixin.setEnabled(true);
				edt_graduInst.setEnabled(true);
				tv_head_edt.setVisibility(View.VISIBLE);
				btn_complete.setVisibility(View.VISIBLE);
				
			}
    		
    	});
    	iv_image.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent = new Intent();
				intent.setClass(PersonalInfoActivity.this,AvatorView.class);
				intent.putExtra("data", headPath);
				startActivity(intent);
				
			}
    		
    	});
    	tv_head_edt.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View view) {
				// TODO Auto-generated method stub
				new mDialog(PersonalInfoActivity.this).show();
			}
    		
    	});
    	btn_complete.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View view) {
				// TODO Auto-generated method stub
			//	updatePersonalDetail();
				saveNewHeadPicture(); //将临时的头像图片替换为正式的头像图片	
				String fileStr =ImageUtils.bitmapToString(headPath);//将头像图片 转换成base64字符串
				File file = new File(headPath);
				System.out.println("base64 file String is "+ fileStr);
				System.out.println(" file size is "+ file.length()+"B");
			}
    		
    	});
    }
    //将临时的头像存储为新的头像
    public void saveNewHeadPicture(){
    	File file_temp = new File(headPath_temp);
    	File file  = new File(headPath);
    	if(file_temp.exists()){
    		if(file.exists()){
    			file.delete();
    		}
    		file_temp.renameTo(file);
    	}
    }
    class mDialog extends ChooseDialog{

		public mDialog(Context context) {
			super(context);
			// TODO Auto-generated constructor stub
			
		}

		@Override
		public void takephoto() {  //�����
			// TODO Auto-generated method stub
			Intent intent = new Intent(PersonalInfoActivity.this,ClipPictureActivity.class);
			intent.putExtra("way", "001");
			startActivity(intent);
			finish();
		}

		@Override
		public void takepicture() {
			// TODO Auto-generated method stub
			Intent intent = new Intent(PersonalInfoActivity.this,ClipPictureActivity.class);
			intent.putExtra("way", "002");
			startActivity(intent);
			finish();
		}
    	
    }
	
}
